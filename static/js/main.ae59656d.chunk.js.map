{"version":3,"sources":["todoList/Header.js","todoList/AddToDo.js","todoList/TaskItem.js","todoList/Todos.js","todoList/Footer.js","api/firebase.js","api/todos.js","todoList/views/TodoApp.js","todoList/App.js","serviceWorkerRegistration.js","index.js"],"names":["Header","AddToDo","handleAddTodo","inputValue","handleChange","className","clsx","active","length","htmlFor","onKeyPress","e","nativeEvent","keyCode","id","type","onChange","value","placeholder","onClick","TaskItem","pk","deletTodoItem","handleIsDone","todo","triggerEditColumn","handleSave","useState","name","tempTitle","setTempTitle","checkIsDoneCantModify","isEdit","done","isDone","edit","onDoubleClick","focusable","xmlns","width","height","viewBox","fill","fillRule","d","target","onKeyDown","handleKeyDown","Todos","todos","map","item","Container","styled","div","Footer","button","things","handleFBLogout","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseDB","database","setNewFBData","payload","a","fetch","data","console","log","ref","set","getTodos","rowData","json","once","val","dataFromFB","createTodo","deleteTodo","updateTodo","defaultTodos","TodoApp","setTodos","setInputValue","useEffect","fetchData","water_level","uuidv4","res","newTodo","filter","newTodos","callback","editStatus","prevTodos","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.ae59656d.chunk.js","sourcesContent":["const Header = () =>(\r\n    <header>\r\n        <h3>水庫</h3>\r\n    </header>\r\n)\r\n\r\nexport default Header;","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nconst AddToDo = ({handleAddTodo,inputValue,handleChange}) => {\r\n    // useEffect(()=>{\r\n    //     document.getElementById('add-todo-input').addEventListener('keypress',(e)=>{\r\n    //         if(e.keyCode === 13){\r\n    //           handleAddTodo(e);  \r\n    //         }\r\n    //     })\r\n    // },[])\r\n    return (\r\n        <div className={clsx(\"add-todo\",{active:inputValue.length > 0})}>\r\n            <label className=\"add-todo-icon icon\" htmlFor=\"add-todo-input\"></label>\r\n            <div className=\"add-todo-input\" onKeyPress={e=>{\r\n                if(e.nativeEvent.keyCode === 13){\r\n                    handleAddTodo();\r\n                }\r\n            }}>\r\n                <input \r\n                    id=\"add-todo-input\"\r\n                    type=\"text\"\r\n                    onChange={handleChange}\r\n                    value={inputValue}\r\n                    placeholder=\"新增工作\"\r\n                />\r\n            </div>\r\n            <div className=\"add-todo-action\">\r\n                <button className=\"btn-reset btn-add\" onClick={handleAddTodo}> 新增 </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddToDo;","import {useState} from 'react';\r\nimport clsx from 'clsx';\r\n\r\nconst TaskItem = ({pk,deletTodoItem,handleIsDone,todo,triggerEditColumn,handleSave})=>{\r\n    const [tempTitle,setTempTitle] = useState(todo.name);\r\n    //雙向綁定title的即時修正\r\n    const handleEditChange=(e)=>{\r\n        setTempTitle(e.target.value);\r\n    }\r\n\r\n    //因為不希望isDone的項目名稱被修改，所以做個判斷是否再修改狀態的判斷\r\n    const checkIsDoneCantModify = () => {\r\n        if(todo.isEdit){//如果select啟動，代表修改模式正出現，isDone必須關閉修改模式\r\n            triggerEditColumn(todo,false)\r\n        }\r\n    }\r\n    const handleKeyDown= e =>{\r\n        if(e.keyCode=== 13 && tempTitle.length!== 0)\r\n            handleSave({id:todo.id,name:tempTitle,isDone:todo.isDone});\r\n        else if(e.keyCode === 27){\r\n            triggerEditColumn(todo.id,false)\r\n            setTempTitle(todo.name)\r\n        }\r\n    }\r\n    return (\r\n        <div className={clsx(\"task-item\",{done:todo.isDone,edit:todo.isEdit})}>\r\n            {/* task-item 要有done 和 edit兩個判斷 */}\r\n            <div className=\"task-item-checked\">\r\n                <span className=\"icon icon-checked\" onDoubleClick={()=>handleIsDone({id:todo.id,name:todo.name,isDone:todo.isDone?false:true},checkIsDoneCantModify)}>\r\n                {/* icon-check-circle */}\r\n                    <svg focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                        <path fill=\"#ff6600\" fillRule=\"evenodd\"\r\n                        d=\"M12 20c-4.411 0-8-3.589-8-8s3.589-8 8-8 8 3.589 8 8-3.589 8-8 8m0-17c-4.963 0-9 4.037-9 9s4.037 9 9 9 9-4.037 9-9-4.037-9-9-9\">\r\n                        </path>\r\n                    </svg>\r\n                </span>\r\n            </div>\r\n        \r\n            <div className=\"task-item-body\">\r\n                <span className=\"task-item-body-text\" onDoubleClick={()=>{\r\n                    triggerEditColumn(todo.id,true)\r\n                }}>{tempTitle}</span>\r\n                <input className=\"task-item-body-input\" type=\"text\" placeholder=\"新增水庫\" \r\n                    value={tempTitle} \r\n                    onChange={handleEditChange}\r\n                    onDoubleClick={()=>triggerEditColumn(todo.id,false)}\r\n                    onKeyDown={(e)=>handleKeyDown(e)}\r\n                />\r\n            </div>\r\n            <div className=\"task-item-action\">\r\n                <button className=\"btn-reset btn-destroy icon\" onClick={()=>deletTodoItem(pk)}> </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskItem;","import TaskItem from './TaskItem';\r\n\r\nconst Todos = ({todos,deletTodoItem,handleIsDone,triggerEditColumn,handleSave}) =>(\r\n    <div className=\"todos\">\r\n        {todos?.map((item)=>(<TaskItem key={item.id} pk={item.id} deletTodoItem={deletTodoItem} handleSave={handleSave} handleIsDone={handleIsDone} todo={item} triggerEditColumn={triggerEditColumn}/>))}\r\n    </div>\r\n)\r\n\r\nexport default Todos;","import styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    display:flex;\r\n    justify-content:space-between;\r\n`\r\n\r\nconst LogoutButton = styled.button`\r\n    font-size:14px;\r\n    font-weight:400;\r\n    margin:2rem 0 1rem 0;\r\n    &:hover{\r\n        text-decoration:underline;\r\n    }\r\n`\r\n\r\nconst Footer =({things,handleFBLogout})=>(\r\n    <footer>\r\n        <Container>\r\n            <p>剩餘水庫: {things}</p>\r\n            {/* <LogoutButton className=\"btn-reset\" onClick={handleFBLogout}>登出</LogoutButton>   */}\r\n        </Container>\r\n    </footer>\r\n)\r\n\r\nexport default Footer;","import \"firebase/analytics\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/database\";\r\nimport firebase from \"firebase/app\";\r\n// let firebase = Firebase.default;\r\n\r\nconst setting = { timestampsInSnapshots: true }\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBwkut8s7gW3213wNnxJUkGHd41HUoUgcg\",\r\n    authDomain: \"todolistpractice-df8c0.firebaseapp.com\",\r\n    databaseURL: \"https://todolistpractice-df8c0-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n    projectId: \"todolistpractice-df8c0\",\r\n    storageBucket: \"todolistpractice-df8c0.appspot.com\",\r\n    messagingSenderId: \"883060790362\",\r\n    appId: \"1:883060790362:web:9753291c522096fbacf463\",\r\n    measurementId: \"G-99R0TRJ7TB\"\r\n}\r\n\r\n// console.log('firebase',firebase);\r\nfirebase.initializeApp(config);\r\n\r\nlet firebaseDB = firebase.database();\r\nexport default firebaseDB;","import firebaseDB from './firebase';\r\nlet baseURL=\"https://gist.githubusercontent.com/May27Oliver/e66c7238287b391d4f07bb578e72bd9a/raw/df1d1647e2b8f410fd47cf09187eab30543ff65d/todoList.json\";\r\n\r\nexport const setNewFBData = async (payload) =>{\r\n    let data = await fetch(\"https://gist.githubusercontent.com/May27Oliver/e66c7238287b391d4f07bb578e72bd9a/raw/df1d1647e2b8f410fd47cf09187eab30543ff65d/todoList.json\")\r\n    console.log('data',data);\r\n    firebaseDB.ref('/').set(payload);\r\n    return await getTodos();\r\n}\r\n//READ\r\nexport const getTodos = async () => {\r\n    let rowData = await fetch(\"https://gist.githubusercontent.com/May27Oliver/e66c7238287b391d4f07bb578e72bd9a/raw/df1d1647e2b8f410fd47cf09187eab30543ff65d/todoList.json\")\r\n    let data = await rowData.json();\r\n    console.log('data',data);\r\n    let dataFromFB = await (await firebaseDB.ref('/').once('value')).val();\r\n    return dataFromFB;\r\n}\r\n//CREATE\r\nexport const createTodo = async (payload) => {\r\n    return setNewFBData(payload);\r\n}\r\n\r\n//DELETE\r\nexport const deleteTodo = async (payload) => {\r\n    return setNewFBData(payload);\r\n}\r\n\r\n// UPDATE\r\nexport const updateTodo = async (payload) => {\r\n    return setNewFBData(payload);\r\n}","import {useState,useEffect} from 'react';\r\nimport Header from './../Header';\r\nimport AddToDo from './../AddToDo';\r\nimport Todos from './../Todos';\r\nimport Footer from './../Footer'\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport { getTodos,createTodo, updateTodo, deleteTodo } from './../../api/todos'\r\nimport './../App.css';\r\n \r\nlet defaultTodos=[];\r\nconst TodoApp = ({}) => {\r\n    let [todos,setTodos] = useState(defaultTodos);//todoList array\r\n    let [inputValue,setInputValue] = useState('');//input欄位的值 \r\n    \r\n    useEffect(()=>{\r\n        fetchData();\r\n    },[]);  \r\n    \r\n    //RESTFUL Api functions\r\n    //Read Data\r\n    const fetchData = async () => {\r\n        defaultTodos = await getTodos();\r\n        console.log('defaultTodos',defaultTodos)\r\n        setTodos(defaultTodos);\r\n    }\r\n    //新增todo項目\r\n    const handleAddTodo = async() =>{\r\n        if(inputValue.length!== 0){\r\n            try{\r\n                let res;\r\n                if(todos && todos.length > 0){\r\n                    res = await createTodo(\r\n                        [\r\n                            ...todos,\r\n                            {\r\n                                name:inputValue,\r\n                                water_level:100,\r\n                                id:uuidv4(),\r\n                            }\r\n                        ]\r\n                    );\r\n                }else{\r\n                    res = await createTodo([\r\n                        {\r\n                            name:inputValue,\r\n                            water_level:100,\r\n                            id:uuidv4(),\r\n                        }\r\n                    ])\r\n                }\r\n                setTodos(res);\r\n            }catch(e){\r\n                console.log(e);\r\n            }\r\n        }\r\n        setInputValue(\"\")\r\n    }\r\n\r\n    //雙向綁定新增工作欄位值\r\n    const handleChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    //顯示編輯input\r\n    const handleIsDone = (payload,callback) => {\r\n        if(callback){//檢查是否為編輯狀態，如為編輯狀態則關閉編輯狀態\r\n            callback();\r\n        }\r\n\r\n        handleSave(payload);\r\n        fetchData();\r\n    }\r\n    \r\n    //刪除todo事項\r\n    const deletTodoItem = async (id) => { \r\n        let newTodo;\r\n        if(todos && todos.length > 0){\r\n            newTodo = todos.filter(item=>{\r\n                return item.id !== id;\r\n            })\r\n        }else{\r\n            newTodo = [];\r\n        }\r\n        \r\n        let res = await deleteTodo(newTodo);\r\n        setTodos(res);\r\n    }\r\n    \r\n    //開啟關閉edit欄位\r\n    const triggerEditColumn = (id,editStatus) =>{\r\n        setTodos(prevTodos=>\r\n            prevTodos.map(todo => {\r\n                if(todo.id!==id)\r\n                    return todo\r\n                else if(todo.id === id && todo.isDone)\r\n                    return {\r\n                        ...todo,\r\n                        isEdit:editStatus,\r\n                        isDone:false\r\n                    }\r\n                else if(todo.id === id)\r\n                    return {\r\n                        ...todo,\r\n                        isEdit:editStatus\r\n                    }\r\n            })\r\n        );\r\n    }\r\n\r\n    //儲存edit變更\r\n    const handleSave = async(payload)=>{\r\n        const {id ,name, isDone} = payload;\r\n        let newTodos = todos.map(item =>{\r\n            if(item.id === id){\r\n                return {\r\n                    id,\r\n                    name,\r\n                }\r\n            }else{\r\n                return item\r\n            }\r\n        })\r\n        let res = await updateTodo(newTodos);\r\n        setTodos(res);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <AddToDo handleAddTodo={handleAddTodo} inputValue={inputValue} handleChange={handleChange}/>\r\n            <Todos todos={todos} deletTodoItem = {deletTodoItem} handleIsDone={handleIsDone} handleSave={handleSave} triggerEditColumn={triggerEditColumn}/>\r\n            <Footer things = {todos?todos.length:0}/>\r\n        </>\r\n    )\r\n}\r\nexport default TodoApp;","import TodoApp from './views/TodoApp';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className = \"app\">\r\n            <TodoApp/>\r\n        </div>\r\n    )\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './todoList/App';//react component\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nReactDOM.render(\r\n  <App />\r\n,document.getElementById('root'));\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nserviceWorkerRegistration.register();\r\n"],"sourceRoot":""}